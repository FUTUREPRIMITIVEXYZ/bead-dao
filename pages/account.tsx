import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import { useAccount } from "wagmi";
import { useEffect, useState } from "react";
import { Alchemy, Network, Contract } from "alchemy-sdk";
import { Card } from "../components/card";
import { Background } from "../components/background";
import WalletIcon from "../components/walletIcon";
import { OpenSeaIcon } from "../components/openseaIcon";
import { EtherscanIcon } from "../components/etherscanIcon";
import { TwitterIcon } from "../components/twitterIcon";
import { GraphViewIcon } from "../components/GraphIcon";
import { AddressBar } from "../components/addressBar";

const contractAddress = "0x8ee9a60cb5c0e7db414031856cb9e0f1f05988d1";
const alchemy = new Alchemy({
  apiKey: process.env.NEXT_PUBLIC_ALCHEMY_API_KEY,
  network: Network.ETH_GOERLI,
});

const Account: NextPage = () => {
  // we have to do this for conditional render b/c of react hydration error
  const [displayMint, setDisplayMint] = useState(false);
  const [displayName, setDisplayname] = useState("");
  const { address } = useAccount();

  useEffect(() => {
    if (address) {
      setDisplayMint(true);
    }
  }, [address]);

  useEffect(() => {
    if (address) {
      setDisplayname(`${address.slice(0, 4)}...${address.slice(-4)}`);
    }
  }, [address]);

  // async function mint() {
  //   const provider = await alchemy.config.getProvider();
  //   const lizContract = new Contract(
  //     contractAddress,
  //     ["function mint(address, address)"],
  //     provider
  //   );
  // }

  const lounge = [
    {
      name: "Bead Lizard #102: Lizz Lemon",
      address: "lizzlemon.beaddao.eth",
      image: "/liz-nft.png",
    },
    {
      name: "Bead Lizard #102: Lizz Lemon",
      address: "lizzlemon.beaddao.eth",
      image: "/liz-nft.png",
    },
    {
      name: "Bead Lizard #102: Lizz Lemon",
      address: "lizzlemon.beaddao.eth",
      image: "/liz-nft.png",
    },
    {
      name: "Bead Lizard #102: Lizz Lemon",
      address: "lizzlemon.beaddao.eth",
      image: "/liz-nft.png",
    },
  ];

  return (
    <div className="">
      <Head>
        <title>Bead DAO</title>
        <meta
          name="description"
          content="Generated by @rainbow-me/create-rainbowkit"
        />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Background justifyContent="justify-start" height="100%">
        <div>
          <Card>
            <div className="flex flex-col space-y-4 items-start justify-center">
              <Image
                className="bg-contain h-full w-full border-2 border-solid border-black rounded-2xl overflow-hidden"
                height={348}
                width={348}
                alt="beaded lizard image"
                src="/liz-nft.png"
              />
              <div className="mb-4 flex items-center space-x-2 justify-start font-bold text-address-color-secondary">
                <WalletIcon height={25} width={24} />
                {/* <AccountIcon /> */}
                <span className="whitespace-nowrap">Owned by</span>
                <a href={"/"} className="cursor-pointer">
                  <span className="rounded-3xl bg-address py-1 px-4 cursor-pointer">
                    {displayName}
                  </span>
                </a>
              </div>
              <h1 className="text-3xl font-bold">
                Bead Lizard #92: Lizzy Mcguire
              </h1>
              <AddressBar
                text="lizzymcguire.beaddao.eth"
                link="https://google.com"
              />
              <div className="flex items-center justify-start space-x-4">
                <a href="https://opensea.io" target="_blank" rel="noreferrer">
                  <OpenSeaIcon />
                </a>
                <a
                  href={`https://etherscan.io/address/${address || ""}`}
                  target="_blank"
                  rel="noreferrer"
                >
                  <EtherscanIcon />
                </a>
                <a
                  href={`https://twitter.com/ilovebeadz`}
                  target="_blank"
                  rel="noreferrer"
                >
                  <TwitterIcon />
                </a>
              </div>
            </div>
          </Card>
          <Card>
            <div className="grid grid-cols-2 gap-4 place-content-between">
              {lounge.map((lizard, i) => (
                <div key={i} className="w-full overflow-hidden">
                  <Image
                    src={lizard.image}
                    alt="lizard image"
                    height={154}
                    width={154}
                  />
                  <div className="font-xm font-bold">{lizard.name}</div>
                  <AddressBar
                    text="lizzymcguire.beaddao.eth"
                    link="https://google.com"
                    size="sm"
                  />
                </div>
              ))}
            </div>
          </Card>
        </div>
      </Background>
    </div>
  );
};

export default Account;
